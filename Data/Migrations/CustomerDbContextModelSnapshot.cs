// <auto-generated />
using System;
using CustomerManagementService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerManagementService.Data.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    partial class CustomerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomerManagementService.Data.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Funds")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("596a149f-1752-4c9b-bbad-cd69e909f44c"),
                            CustomerId = new Guid("be2efcdc-c19c-4af7-91fb-8cdf42c6480e"),
                            Funds = 100m
                        },
                        new
                        {
                            Id = new Guid("85f72b1a-ef80-4198-bdca-740ced5e6335"),
                            CustomerId = new Guid("a3b8eda4-faf1-4997-94de-d67305ed750e"),
                            Funds = 200m
                        });
                });

            modelBuilder.Entity("CustomerManagementService.Data.Models.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CustomerId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d644907-37a5-4fb5-99c5-6b662114dbe1"),
                            Address = "1 High Street",
                            County = "Anyshire",
                            CustomerId = new Guid("be2efcdc-c19c-4af7-91fb-8cdf42c6480e"),
                            Email = "jsmith@gmail.com",
                            Name = "John Smith",
                            Phone = "01234 567890",
                            Postcode = "AB1 2CD",
                            Town = "Anytown"
                        },
                        new
                        {
                            Id = new Guid("41f2a643-9dc4-4480-ab0a-7b44ff8a189a"),
                            Address = "2 High Street",
                            County = "Anyshire",
                            CustomerId = new Guid("a3b8eda4-faf1-4997-94de-d67305ed750e"),
                            Email = "jdoe~gmail.com",
                            Name = "Jane Doe",
                            Phone = "01234 567890",
                            Postcode = "AB1 2CD",
                            Town = "Anytown"
                        });
                });

            modelBuilder.Entity("CustomerManagementService.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be2efcdc-c19c-4af7-91fb-8cdf42c6480e"),
                            AuthId = "auth0|60a0a0a0a0a0a0a0a0a0a0a0"
                        },
                        new
                        {
                            Id = new Guid("a3b8eda4-faf1-4997-94de-d67305ed750e"),
                            AuthId = "auth0|60a0a0a0a0a0a0a0a0a0a0a1"
                        });
                });

            modelBuilder.Entity("CustomerManagementService.Data.Models.Account", b =>
                {
                    b.HasOne("CustomerManagementService.Models.Customer", "Customer")
                        .WithOne("Account")
                        .HasForeignKey("CustomerManagementService.Data.Models.Account", "CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Accounts_Customers");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerManagementService.Data.Models.Profile", b =>
                {
                    b.HasOne("CustomerManagementService.Models.Customer", "Customer")
                        .WithOne("Profile")
                        .HasForeignKey("CustomerManagementService.Data.Models.Profile", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Profiles_Customers");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerManagementService.Models.Customer", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("Profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
