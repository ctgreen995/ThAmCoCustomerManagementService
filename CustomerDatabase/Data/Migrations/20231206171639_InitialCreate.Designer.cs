// <auto-generated />
using System;
using CustomerDatabase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerDatabase.Data.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    [Migration("20231206171639_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomerDatabase.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "Cust01",
                            Address = "123 Main St",
                            County = "Shelby",
                            Email = "johndoe@example.com",
                            Name = "John Doe",
                            Phone = "555-1234",
                            Postcode = "12345",
                            Town = "Springfield"
                        },
                        new
                        {
                            Id = "Cust02",
                            Address = "456 Elm St",
                            County = "Franklin",
                            Email = "janesmith@example.com",
                            Name = "Jane Smith",
                            Phone = "555-5678",
                            Postcode = "23456",
                            Town = "Greenville"
                        });
                });

            modelBuilder.Entity("CustomerDatabase.Models.Session", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Sessions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "Sess01",
                            CustomerId = "Cust01",
                            Date = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = "1 hour"
                        },
                        new
                        {
                            Id = "Sess02",
                            CustomerId = "Cust01",
                            Date = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = "2 hours"
                        },
                        new
                        {
                            Id = "Sess03",
                            CustomerId = "Cust02",
                            Date = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Length = "1.5 hours"
                        });
                });

            modelBuilder.Entity("CustomerDatabase.Models.Session", b =>
                {
                    b.HasOne("CustomerDatabase.Models.Customer", "Customer")
                        .WithMany("Sessions")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Sessions_Customers");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerDatabase.Models.Customer", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
