name: Build and deploy ASP.Net Core app to an Azure Web App
env:
  AZURE_WEBAPP_NAME: ThAmCoCustomerManagementServiceDev  
  AZURE_WEBAPP_PACKAGE_PATH: '.'  
  DOTNET_VERSION: '7.0.x'             
on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Build with dotnet
        run: dotnet build --configuration Debug

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Test with dotnet
        run: dotnet test --configuration Debug --no-build

 publish:
    needs: test
    runs-on: ubuntu-latest
    environment: 
      name: 'Dev & Testing'
    steps:
      - uses: actions/checkout@v3
  
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
  
      - name: Install Entity Framework Core tools
        run: dotnet tool install --global dotnet-ef --version 7.0.7
  
      - name: Apply database migrations
        run: dotnet ef database update --project CustomerManagementService.csproj
        env:
          ConnectionStrings__CustomerDbConnection: ${{ secrets.DEV_CUSTOMER_DB_CONNECTION }}
  
      - name: dotnet publish
        run: dotnet publish CustomerManagementService.csproj -c Debug -o ${{env.DOTNET_ROOT}}/CustomerManagementService
  
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/CustomerManagementService


  deploy:
    needs: publish
    permissions:
      contents: none
    runs-on: ubuntu-latest
    environment:
      name: 'Dev & Testing'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
